define(['jquery', 'echarts'], ($, echarts) => {
  let module = {};
  let chart;
  module.init = (el) => {
    var chart = echarts.init(document.getElementById(el));

    var jsonData = {
      nodes: [], edges: []
    }

    for (var j = 0; j < 5; j++) {
      for (var i = 0; i <= j; i++) {
        var node = {
          id: i * 5 + j,
          i: i,
          j: j,
          name: '192.168.' + i + '.' + (j + 1),
          value: (i * 5 + j * 5),
          // symbolSize: 10 + i * j,
          category: j,
          label: { normal: i == 0 }
        };
        jsonData.nodes.forEach(function (n) {
          if (n.i == i || n.j == j) {
            jsonData.edges.push({ source: n.id, target: node.id });
          }
        });
        if (j == 1) {
          node.symbol = "path://M19.7,0.5H4.3c-2.1,0-3.8,1.7-3.8,3.8v15.4c0,2.1,1.7,3.8,3.8,3.8h15.4c2.1,0,3.8-1.7,3.8-3.8V4.3   C23.5,2.2,21.8,0.5,19.7,0.5z M19.1,16.5l-6.6,3c-0.2,0.1-0.3,0.1-0.5,0.1c-0.2,0-0.3,0-0.5-0.1l-6.6-3c-0.3-0.1-0.4-0.4-0.4-0.7   c0-0.3,0.2-0.5,0.4-0.7l1.3-0.6c0.2-0.1,0.5,0,0.6,0.2c0.1,0.2,0,0.5-0.2,0.6l-0.9,0.4l6.1,2.8c0.1,0,0.1,0,0.2,0l6.1-2.8l-0.9-0.4   c-0.2-0.1-0.3-0.4-0.2-0.6c0.1-0.2,0.4-0.3,0.6-0.2l1.3,0.6c0.3,0.1,0.4,0.4,0.4,0.7C19.5,16.2,19.3,16.4,19.1,16.5z M19.1,12.7   l-6.5,3c-0.2,0.1-0.3,0.1-0.5,0.1c-0.2,0-0.3,0-0.5-0.1l-6.5-3c-0.3-0.1-0.4-0.4-0.4-0.7c0-0.3,0.2-0.5,0.4-0.7l1.3-0.6   c0.2-0.1,0.5,0,0.6,0.2c0.1,0.2,0,0.5-0.2,0.6L5.8,12l6.1,2.8c0.1,0,0.1,0,0.2,0l6.1-2.8l-0.9-0.4c-0.2-0.1-0.3-0.4-0.2-0.6   c0.1-0.2,0.4-0.3,0.6-0.2l1.3,0.6c0.3,0.1,0.4,0.4,0.4,0.7C19.5,12.3,19.3,12.6,19.1,12.7z M19.1,8.8l-6.6,3   c-0.2,0.1-0.3,0.1-0.5,0.1c-0.2,0-0.3,0-0.5-0.1l-6.6-3C4.7,8.7,4.5,8.5,4.5,8.2c0-0.3,0.2-0.5,0.4-0.7l6.5-3   c0.3-0.2,0.8-0.2,1.1,0l6.5,3c0.3,0.1,0.4,0.4,0.4,0.7C19.5,8.5,19.3,8.7,19.1,8.8z";
          node.symbolSize = [18, 18];
        }
        else if (j == 0) {
          node.symbolSize = [10, 18];
          node.symbol = 'path://M22,2H8C6.895,2,6,2.895,6,4v22c0,1.105,0.895,2,2,2h14c1.105,0,2-0.895,2-2V4C24,2.895,23.105,2,22,2z M15,20.5  c-0.828,0-1.5-0.672-1.5-1.5c0-0.828,0.672-1.5,1.5-1.5s1.5,0.672,1.5,1.5C16.5,19.828,15.828,20.5,15,20.5z M11,13  c-0.552,0-1-0.448-1-1c0-0.552,0.448-1,1-1s1,0.448,1,1C12,12.552,11.552,13,11,13z M15,25c-0.552,0-1-0.448-1-1  c0-0.552,0.448-1,1-1s1,0.448,1,1C16,24.552,15.552,25,15,25z M11,7c-0.552,0-1-0.448-1-1c0-0.552,0.448-1,1-1s1,0.448,1,1  C12,6.552,11.552,7,11,7z M22,14H8v-4h14V14z M22,8H8V4h14V8z';
        } else if (j == 2) {
          node.symbolSize = [18, 18];
          node.symbol = "path://M5.62636 1.83245c0.00167717,0.0101063 0.614453,3.51268 -2.12868,4.19991 -0.0141929,0.00495669 -0.0299409,0.00599606 -0.0456181,0.00211024l4.72441e-005 -0.000192913c-2.70446,-0.671213 -2.21345,-4.07393 -2.19486,-4.19702 0.000492126,-0.00487795 0.00144488,-0.00977953 0.00288189,-0.0146535 0.0125079,-0.0423701 0.0570079,-0.0665787 0.099378,-0.0540709l-5.51181e-005 0.000188976c1.01331,0.299079 1.95127,-0.742988 2.01849,-0.819535 0.0033937,-0.00456693 0.0073189,-0.00883858 0.0117835,-0.0127244 0.0333346,-0.0289921 0.0838701,-0.0254724 0.112862,0.0078622l-5.11811e-005 0.000311024c0.00281102,0.00323622 0.969602,1.13089 2.01818,0.82526 0.00440551,-0.00155906 0.00900787,-0.00276378 0.0137835,-0.00355512 0.0435827,-0.00723622 0.0847874,0.0222283 0.0920236,0.065811l-0.000165354 0.000295276zm-0.283835 0.304059c-0.489713,0.063874 -0.975492,-0.108535 -1.38989,-0.381441 -0.170043,-0.111984 -0.3515,-0.255728 -0.50989,-0.408508 -0.170484,0.161772 -0.378154,0.318626 -0.547854,0.425213 -0.404894,0.254319 -0.873449,0.412122 -1.34611,0.360079 -0.0397992,0.507594 -0.0111181,1.04035 0.0981614,1.52863 0.228236,1.01978 0.790378,1.76761 1.81884,2.04676 1.02542,-0.32935 1.58583,-1.10167 1.7983,-2.13894 0.0869921,-0.424717 0.120988,-0.965 0.0784409,-1.4318z";
        }

        if (i == 0) {
          if (node.symbolSize && node.symbolSize[0]) {
            node.symbolSize = [node.symbolSize[0] * 2, node.symbolSize[1] * 2];
          }
          node.label = { normal: { show: true } };
          node.fixed = true;
          node.x = 400;
          node.y = (j + 1) * 100;
        }
        jsonData.nodes.push(node);
      }
    }

    var options = {
      legend: {
        data: ['应用服务器', '数据服务器', '防火墙', '负载均衡器', '其他']
      },
      animationDuration: 1500,
      animationEasingUpdate: 'quinticInOut',
      series: [{
        type: 'graph',
        layout: 'force',
        // animation: false,
        label: {
          normal: {
            position: 'right',
            formatter: '{b}'
          }
        },
        lineStyle: {
          normal: {
            color: 'source',
            curveness: 0.3
          }
        },
        draggable: true,
        data: jsonData.nodes,
        categories: [
          { "name": "应用服务器" },
          { "name": "数据服务器" },
          { "name": "防火墙" },
          { "name": "负载均衡器" },
          { "name": "其他" }
        ],
        force: {
          // initLayout: 'circular',
          // repulsion: 20,
          edgeLength: 200,
          repulsion: 120,
          gravity: 0.2
        },
        edges: jsonData.edges
      }]
    };

    chart.setOption(options);
    $(window).on('resize', chart.resize);
  };

  module.destroy = () => {
    if (chart) {
      $(window).off('resize', chart.resize);
    }
  };
  return module;
});